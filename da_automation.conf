input {
file {
path => "/opt/toolsteam/automatareport/*"
start_position => beginning
ignore_older => 0
type => "ar"
sincedb_path => "/dev/null"

}

file {
path => "/opt/toolsteam/rawdata/*"
start_position => beginning
ignore_older => 0
type => "rd"
sincedb_path => "/dev/null"

}
}

filter{

if [type] == "ar" {

  csv {
     separator => ","

    columns => ["Client","Automata Name","Total Alerts","Diagnosed","Remediated","Failed","Connectivity Failed","Failure Rate","Remediation Rate","Remediation Switched To Diagnosis","Switched %","CMDB Failed","CMDB Failed %"]


  }

mutate {convert =>  ["Total Alerts", "float"] }
mutate {convert =>  ["Diagnosed", "float"] }
mutate {convert =>  ["Remediated", "float"] }
mutate {convert =>  ["Failed", "float"] }
mutate {convert =>  ["Connectivity Failed", "float"] }
mutate { remove_field => ["Failure Rate","Remediation Rate","Remediation Switched To Diagnosis","Switched %","CMDB Failed","CMDB Failed %"] }
}
uuid {
     target    => "uuid"
     overwrite => true
   }






if [type] == "rd" {

  csv {
     separator => ","
    columns => ["IOT","ImT","Radar_id","Execution_id","create_date","finish_date","Execution_time_in_Sec","Actual_Automata_purpose","Execution_Purpose","closure_code","description","Hostname","Service","username","automaton","component_name","cmdb_details","fcode","failure_reason","return_code","stdout","stderr","command_description","status","queue_name","ipim_id","EBondTicket","Client","Client_name","affected_host","component_output","Situation"]

  }

}

uuid {
     target    => "uuid"
     overwrite => true
   }

}
output {


if [type] == "ar" {

   elasticsearch {
     hosts => ["10.5.112.121:9200", "10.5.112.122:9200"]
     index => "automatareport"
     document_id => "%{uuid}"

  }
stdout {codec => rubydebug}
}

if [type] == "rd" {

   elasticsearch {
     hosts => ["10.5.112.121:9200", "10.5.112.122:9200"]
     index => "rawdata"
     document_id => "%{uuid}"

  }
stdout {codec => rubydebug}
}
}

